#pragma once

#include <forward_list>
#include <iostream>
using namespace std;

template <typename T>
class LStack
{
private:
    forward_list<T> data;
    int count;

public:
    LStack() : count(0) {}

    // Inserta un elemento en la cima de la pila
    void Push(const T& value)
    {
        data.push_front(value);
        count++;
    }

    // Elimina y devuelve el elemento en la cima de la pila
    T Pop()
    {
        if (count == 0)
        {
            cout << "Cuidado, estás haciendo Pop en una pila vacía" << endl;
            return {}; // valor por defecto de T
        }
        T topValue = data.front();
        data.pop_front();
        count--;
        return topValue;
    }

    // Devuelve el elemento en la cima sin eliminarlo
    T Peek() const
    {
        if (count == 0)
        {
            cout << "Cuidado, estás haciendo Peek en una pila vacía" << endl;
            return {};
        }
        return data.front();
    }

    // Devuelve la cantidad de elementos en la pila
    int Count() const
    {
        return count;
    }
};
